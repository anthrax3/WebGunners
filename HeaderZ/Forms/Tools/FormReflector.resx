<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>